SELECT * FROM CUSTOMERS;

CREATE OR REPLACE TABLE SMP_CUSTOMERS
(
    NAME VARCHAR(20),
    DATE DATE
);

CREATE OR REPLACE PROCEDURE CUSTOMERS_INSERT_PROCEDURE2 (NAME VARCHAR,CREATE_DATE varchar)
    RETURNS STRING NOT NULL
    LANGUAGE JAVASCRIPT
    AS
        $$
        var sql_command = 'INSERT INTO SMP_CUSTOMERS(NAME,DATE) VALUES(:1,:2);'
        snowflake.execute(
            {
            sqlText: sql_command,
            binds: [NAME,CREATE_DATE]
            });
        return "Successfully executed.";
        $$;

CALL CUSTOMERS_INSERT_PROCEDURE2('HARI',CURRENT_TIMESTAMP);
SELECT * FROM SMP_CUSTOMERS;

        
CREATE OR REPLACE PROCEDURE CUSTOMERS_INSERT_PROCEDURE (CREATE_DATE varchar)
    RETURNS STRING NOT NULL
    LANGUAGE JAVASCRIPT
    AS
        $$
        var sql_command = 'INSERT INTO CUSTOMERS(DATE) VALUES(:1);'
        snowflake.execute(
            {
            sqlText: sql_command,
            binds: [CREATE_DATE]
            });
        return "Successfully executed.";
        $$;
    
CREATE OR REPLACE TASK CUSTOMER_TAKS_PROCEDURE
WAREHOUSE = MRCSBWH
SCHEDULE = '1 MINUTE'
AS CALL  CUSTOMERS_INSERT_PROCEDURE(CURRENT_TIMESTAMP);



SELECT * FROM CUSTOMERS;
SHOW TASKS;

ALTER TASK CUSTOMER_TAKS_PROCEDURE RESUME;


SELECT * FROM CUSTOMERS;

// TASK RUN ON LAST 1 HOURS 
SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(SCHEDULED_TIME_RANGE_START=>DATEADD('HOUR',-1,CURRENT_TIMESTAMP()),
RESULT_LIMIT =>20));